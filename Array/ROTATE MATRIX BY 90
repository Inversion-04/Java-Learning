
<----------------------------------------------------optimal approach--------------------------------------------------------------------------->

import java.util.*;
public class Main
{
	public static void main(String[] args) {
		Scanner sc=new Scanner(System.in);

		int m=sc.nextInt();
		int n=sc.nextInt();

		int[][] arr=new int[m][n];

		for(int i=0; i<m; i++) {
			for(int j=0; j<n; j++) {
				arr[i][j]=sc.nextInt();
			}
		}
		
		//transpose of matrix

		for(int i=0; i<m; i++) {
			for(int j=0; j<n; j++) {
				if(i<j) {
					int temp=arr[i][j];
					arr[i][j]=arr[j][i];
					arr[j][i]=temp;
				}

			}
		}
		
		//reverse of each row

		for(int i=0;i<n;i++){
		    	int p1=0;
			    int p2=m-1;
		    while(p1<p2){
		        int temp=arr[i][p1];
		        arr[i][p1]=arr[i][p2];
		        arr[i][p2]=temp;
		         p1++;
		         p2--;
		    }
		   
		    
		}
		for(int i=0; i<m; i++) {
			for(int j=0; j<n; j++) {
				System.out.println(arr[i][j]+ " ");
			}
		}
	}
}


<-----------------------------------------------------brute force approach-------------------------------------------------------------------->


import java.util.*;
public class Main
{
	public static void main(String[] args) {
	    Scanner sc=new Scanner(System.in);
	    
	    int m=sc.nextInt();
	    int n=sc.nextInt();
	    
	    int[][] arr=new int[m][n];
	    int[][] ar= new int[m][n];
	    for(int i=0;i<m;i++){
	        for(int j=0;j<n;j++){
	            arr[i][j]=sc.nextInt();
	        }
	    }
	    
	    for(int i=0;i<m;i++){
	        for(int j=0;j<n;j++){
	            ar[j][(n-1)-i]=arr[i][j];
	        }
	    }
	    
	    for(int i=0;i<m;i++){
	        for(int j=0;j<n;j++){
	            System.out.println(ar[i][j]+ " ");
	        }
	    }
	}
}
